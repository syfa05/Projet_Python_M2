import pandas as pd
import tkinter as tk
import requests
import matplotlib.pyplot as plt
import numpy as np
import scipy.interpolate as spi
import json
from datetime import datetime
from scipy.interpolate import CubicSpline
from tkinter import filedialog

class ExcelDataHandler:
    def __init__(self, start_date, end_date):
        self.start_date = start_date
        self.end_date = end_date

    def generate_url(self):
        base_url = "https://odre.opendatasoft.com/api/explore/v2.1/catalog/datasets/consommation-quotidienne-brute/exports/csv"
        formatted_start_date = datetime.strptime(self.start_date, "%Y-%m-%d").strftime("%Y-%m-%dT%H:%M:%SZ")
        formatted_end_date = datetime.strptime(self.end_date, "%Y-%m-%d").strftime("%Y-%m-%dT%H:%M:%SZ")
        query = f"(date_heure%3A%5B{formatted_start_date}%20TO%20{formatted_end_date}%5D)"
        return f"{base_url}?lang=fr&refine=date_heure%3A%222023%22&qv1={query}&timezone=Europe%2FParis&use_labels=true&delimiter=%3B"

    def save_url_to_excel(self, output_file):
        # Lire les données à partir de l'URL
        data = pd.read_csv(self.generate_url())

        # Enregistrer les données dans un fichier Excel
        data.to_excel(output_file, index=False)
        
        print(f"Les données ont été enregistrées dans '{output_file}'")



class FileHandler:
    @staticmethod
    def select_file():
        root = tk.Tk()
        root.withdraw()  # Cacher la fenêtre principale
        file_path = filedialog.askopenfilename(title="Sélectionner un fichier Excel", filetypes=[("Excel files", "*.xlsx")])
        return file_path

    @staticmethod
    def import_and_save_excel_file(file_path, output_file='output.xlsx'):
        # Lire les données à partir du fichier Excel
        data = pd.read_excel(file_path)
        print(f"Les données ont été importées à partir de '{file_path}'")
        
        # Enregistrer les données dans un fichier Excel dans le projet
        data.to_excel(output_file, index=False)
        print(f"Les données ont été enregistrées dans '{output_file}'")
        
        return data



# Demander à l'utilisateur de sélectionner un fichier
file_path = FileHandler.select_file()

if file_path:
    imported_data = FileHandler.import_and_save_excel_file(file_path)
else:
    print("Aucun fichier sélectionné")

    # Définir les dates de début et de fin
    start_date = "2023-12-01"
    end_date = "2024-01-31"

    # Créer une instance de ExcelDataHandler
    excel_handler = ExcelDataHandler(start_date, end_date)

    # Nom du fichier de sortie
    output_file = 'output.xlsx'

    # Appeler la fonction pour sauvegarder les données de l'URL dans un fichier Excel
    excel_handler.save_url_to_excel(output_file)

# Lire les données à partir du fichier Excel
imported_data = pd.read_excel(output_file)
   

